services:
  app:
    container_name: rental-dvd-app
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www
    tty: true
    depends_on:
      - mysql
      - grafana
      - redis
    env_file:
      - .env
    networks:
      - rental-dvd-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8989:80"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/:/etc/nginx/conf.d/
    networks:
      - rental-dvd-network

  mysql:
    container_name: rental-dvd-db
    build:
      context: .docker/mysql
      dockerfile: Dockerfile
    ports:
      - "3309:3306"
    tty: true
    restart: always
    volumes:
      - .docker/mysql/dbdata:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - rental-dvd-network

  grafana:
    container_name: rental-dvd-grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - 3000:3000
    volumes:
      - .docker/grafana/provisioning:/etc/grafana/provisioning
      - ./:/var/www/html
#      - ./.docker/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./.docker/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}
      - GF_SECURITY_ALLOW_EMBEDDING=${GF_SECURITY_ALLOW_EMBEDDING}
      - GF_AUTH_ANONYMOUS_ENABLED=${GF_AUTH_ANONYMOUS_ENABLED}
    depends_on:
      - mysql
    networks:
      - rental-dvd-network

  redis:
    container_name: rental-dvd-redis
    image: redis
    command: redis-server --requirepass rental-dvd
    ports:
      - "6379:6379"
    networks:
      - rental-dvd-network

  frontend:
    container_name: rental-dvd-frontend
    image: node:lts-alpine
    restart: unless-stopped
    ports:
      - "5172:5172"
    working_dir: /var/www
    volumes:
      - ./:/var/www
    command: "npm run build && npm run dev"
    depends_on:
      - app
    tty: true
    networks:
      - rental-dvd-network

networks:
  rental-dvd-network:
    driver: bridge

volumes:
  dbdata: {}
